#!/usr/bin/env sh

#-Runs programs after wm is launched. Basically an extension for bash_profile in this setup.
#-Also avoids any errors that might occur if a program runs before another one.
#-Example: if transmission runs before bspwm rules are set it will open on workspace 1

check_system_updates()
{
	[ "$(curl -s -o /dev/null -w "%{http_code}" https://luccaaugusto.xyz)" = "200" ] || {
		return
	}

	# check if i need updates
	sudo pacman -Sy
	# Tell me if i need to update
	must_update
}

last_session_cleanup()
{
	# Kill all running docker containers in case i forgot to do it before shutting down
	docker_pid=$(docker ps | awk 'NR>1{ print $1}')
	[ "$docker_pid" ] && docker kill $docker_pid # i do want to split

	# compress the time files into only one file
	compress_time
}

keybidings_configurations()
{
	if [ "$(pgrep -x Xorg)" ]; then
		# Load specific WM configs
		if [ "$(pgrep -x bspwm)" ]; then
			cat "$CONFIG/sxhkd/base" "$CONFIG/sxhkd/bspwm_keys" > "$CONFIG/sxhkd/sxhkdrc"
		elif [ "$(pgrep -x dwm)" ]; then
			cat "$CONFIG/sxhkd/base" "$CONFIG/sxhkd/dwm_keys" > "$CONFIG/sxhkd/sxhkdrc" &&
			dwmbar &
		elif [ "$(pgrep -x i3)" ]; then
			cat "$CONFIG/sxhkd/base" "$CONFIG/sxhkd/i3_keys" > "$CONFIG/sxhkd/sxhkdrc"
		else
			cp "$CONFIG/sxhkd/base" "$CONFIG/sxhkd/sxhkdrc"
		fi

		[ "$(pgrep sxhkd)" ] || sxhkd &
	fi
}

start_eww()
{
	rm ~/.local/bin/vendor/eww
	# use correct eww binary
	if [ "$(pgrep -x Xorg)" ]; then
		cp ~/.local/bin/vendor/xeww ~/.local/bin/vendor/eww

		# fix window paddings
		sed -i 's/geometry :x "1%"/geometry :x "-1%"/' ~/.config/eww/right-bar/eww.yuck
		sed -i 's/geometry :x "1%"/geometry :x "-1%"/' ~/.config/eww/sidebar/eww.yuck
		sed -i 's/:y "2%"/:y "-2%"/' ~/.config/eww/sidebar/eww.yuck
	else
		cp ~/.local/bin/vendor/weww ~/.local/bin/vendor/eww

		# fix window paddings
		sed -i 's/geometry :x "-1%"/geometry :x "1%"/' ~/.config/eww/right-bar/eww.yuck
		sed -i 's/geometry :x "-1%"/geometry :x "1%"/' ~/.config/eww/sidebar/eww.yuck
		sed -i 's/:y "-2%"/:y "2%"/' ~/.config/eww/sidebar/eww.yuck
	fi
	launch_eww_bars
}

start_programs()
{
	# wait a bit so systray is ready for all the other programs
	sleep 2

	# low battery notifications (cronjob wasn't working)
	[ "$(pgrep batsinal)" ] || batsinal &
	# Wifi connection
	[ "$(pgrep nm-applet)" ] || nm-applet --indicator &
	# Hide that damn mouse when it is idle
	[ "$(pgrep unclutter)" ] || unclutter &
	# key bindings
	keybidings_configurations &
	# manage external drives
	[ "$(pgrep udiskie)" ] || udiskie -a --appindicator -f pcmanfm &
	# bluetooth
	[ "$(pgrep blueman-applet)" ] || blueman-applet &

	# Seed torrents, like a good boy
	[ "$(pgrep -x transmission-qt)" ] || transmission-qt &

	# open my email account
	[ "$(pgrep thunderbird)" ] || thunderbird &
	# Calendar and other stuff
	[ "$(pgrep ferdium)" ] || ferdium &

	# Notifications
	[ "$(pgrep awesome)" ] || dunst -conf ~/.config/dunst/dunstrc &

	# Utterly amazing transparent terminals
	if [ "$(pgrep -x Xorg)" ]; then
		[ "$(pgrep picom)" ] || picom --config "$HOME/.config/picom/picom-old.conf" &
	fi

	# Let me use pt-br and en-us keyboards
	keyboard_layout &

	#trackpad gestures
	[ "$(pgrep libinput-gestures)" ] || libinput-gestures-setup start &

	# Don't burn my eyes
	# [ "$(pgrep redshift)" ] || toggle_redshift

	# Open slack so i get ready for work
	today=$(date +%a)
	[ ! "$today" = "Sat" ] && [ ! "$today" = "Sun" ] && slack &
}

# MAIN

now=$(date +%H:%M)
login_time=$(who | awk '{print $4}')

last_session_cleanup

# only start programs right after i login so that
# when restarting wm it won't reopen programs i closed
[ "$(date_operations -s "$now" "$login_time")" -lt 2 ] &&
	start_programs

start_eww

# System colors and wallpaper
theme_manager
# only setting the wallpaper for now, as i want to keep my custom kitty colors
# theme_manager --set-wallpaper-only

#  NETWORK DEPENDAND STUFF
#  only execute if connected to the internet
check_system_updates &
