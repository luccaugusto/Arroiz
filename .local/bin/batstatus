#!/usr/bin/env sh

#-Echos to stdout the current capacity of each battery.
#-if util is passed as a argument, echoes the percent
#-of util capacity in relation to the original capacity.
#BAT0 external
#BAT1 internal

bat_status()
{
	bat_status=''
	total_charge=0
	battery_count=0
	total_percent=0
	number_of_batteries=$(ls /sys/class/power_supply/ | grep -c "BAT")
	for bat in /sys/class/power_supply/BAT*
	do
		percent="$(cat "$bat/capacity")"
		total_percent=$((total_percent + percent))
		status="$(cat "$bat/status")"
		battery_count=$((battery_count + 1))
		if [ "$status" != 'Charging' ] && [ "$1" != '--no-icon' ]
		then
			total_charge=$((total_percent + percent))
			icon=" "
			if [ "$percent" -lt 10 ]; then
				icon=" "
			elif [ "$percent" -lt 30 ]; then
				icon=" "
			elif [ "$percent" -lt 50 ]; then
				icon=" "
			elif [ "$percent" -lt 80 ]; then
				icon=" "
			fi
		else
			[ "$1" = "--no-icon" ] || icon=" "
		fi
		bat_status="$bat_status$icon$percent%"
	done

	[ "$1" = '--total' ] && echo "$((total_percent / number_of_batteries))" ||
	echo "$bat_status"
}

bat_util()
{

	for bat in /sys/class/power_supply/BAT*
	do
		ORIGINAL=$(cat "$bat/energy_full_design") &&
		AGORA=$(cat "$bat/energy_full") &&
		python -c "print('$bat',round($AGORA/$ORIGINAL,2)*100,'%')"
	done
}

if [ "$1" == '--util' ]; then
	bat_util
elif [ "$1" == '--total' ]; then
	bat_status '--total'
elif [ "$1" == '--status' ]; then
	for bat in /sys/class/power_supply/BAT*
	do
		[ "$(cat "$bat/status")" = 'Charging' ] && echo 'Charging' && exit 0
	done
	echo 'Discharging'
else
	bat_status "$1"
fi
