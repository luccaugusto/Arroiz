;; ** Variables ***********************************************************************

;; Time vars
(defpoll TIME :interval "1m" `date +\"%H:%M\"`)
(defpoll DATE :interval "24h" `date +\"%a, %B %d\"`)
(defpoll calendar_day :interval "24h" "date '+%d'")
(defpoll calendar_month :interval "24h" "scripts/calendar_month")
(defpoll calendar_year :interval "24h" "date '+%Y'")


;; Battery vars
(defpoll BATSTATUS :interval "2m" `batstatus --no-icon`)
(defpoll BATICON :interval "2m" `scripts/battery --icon`)

;; Keyboard layout
(defpoll keyboard_layout :interval "1s" "scripts/kb_layout")
(defvar KEYBOARD_ICON "images/keyboard.png")

;; CPU vars
(defpoll CPUICON :interval "2s" `scripts/cpu_temp --icon`)
(defpoll CPUTEMP :interval "2s" `scripts/cpu_temp`)

;; Mem vars
(defvar MEMICON "images/ram.png")

;; Volume vars
(defpoll VOLICON :interval "1s" `scripts/volume --icon`)
(defpoll VOLUME :interval "1s" `scripts/volume --get`)

(defpoll notification_paused :interval "1s" "dunstctl is-paused")

;; Network
(defpoll WIFIICON :initial "images/icons/system/no-wifi.png" :interval "1m" `scripts/check-network --icon`)
(defpoll NETSTAT :initial "Checking Network" :interval "30s" `scripts/check-network --stat`)

(deflisten countdown :initial "00:00" "tail -F /tmp/countdown.txt")


;; ** Widgets *************************************************************************

;; system
(defwidget system [screen]
  (box :class "dockbox" :orientation "h" :spacing 6 :valign "center" :halign "end" :space-evenly "false" :vexpand "false" :hexpand "false"
    (systray :class "systray" :spacing 8)
    (box :orientation "h" :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
      (label :class "infotext inforound" :halign "start" :text NETSTAT))
    (box :orientation "h" :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
      (box :style "background-image: url('${BATICON}');" :class "trayicon baticon")
      (label :class "infotext" :halign "start" :valign "center" :text BATSTATUS))
    (button :onclick "alacritty -e gotop -l kitchensink &" :class "clear"
      (box :orientation "h" :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
        (box :style "background-image: url('${CPUICON}');" :class "trayicon")
        (label :class "infotext" :halign "start" :text CPUTEMP)))
    (button :onclick "alacritty -e gotop -l kitchensink &" :class "clear"
      (box :orientation "h" :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
        (box :style "background-image: url('${MEMICON}');" :class "trayicon")
        (label :class "infotext" :halign "start" :text "${round(EWW_RAM.used_mem_perc, 0)}%")))
    (button :onclick "scripts/volume --toggle" :class "clear"
      (box :orientation "h" :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
        (box :style "background-image: url('${VOLICON}');" :class "trayicon")
        (label :class "infotext" :halign "start" :text VOLUME)))
    (box :orientation "h" :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "true"
      (box :style "background-image: url('${KEYBOARD_ICON}');" :class "trayicon")
      (label :class "infotext" :halign "start" :valign "center" :text keyboard_layout))
    (eventbox :onclick "dunstctl set-paused toggle" :cursor "pointer"
      (box :orientation "h" :valign "center" :halign "center" :space-evenly "true" :vexpand "false" :hexpand "false" :class "trayicon"
        (image :path {notification_paused == "true" ? 'images/no-bell.png' : 'images/bell.png'} :image-height 20 :image-width 20)))
    (eventbox :onclick "scripts/toggle_calendar" :cursor "pointer"
      (box :class "clockbox" :orientation "v" :spacing 0 :valign "center" :halign "end" :space-evenly "false" :vexpand "false" :hexpand "false"
        (label :class "time" :halign "end" :wrap "false" :limit-width 25 :text TIME)
        (label :class "date" :halign "start" :wrap "false" :text DATE)))
    (eventbox :onclick "toggle_sidebar &" :cursor "pointer"
      (image :path "images/menu.png" :image-height 25 :image-width 25))
    (eventbox :onclick "rofi -show drun -theme ~/.config/rofi/app_launcher.rasi &" :cursor "pointer"
      (image :path "images/rainbow.png" :image-height 25 :image-width 25))
    ))

(defwidget right-calendar []
	(box :class "cal-box"
		 :orientation "v"
	(calendar :class "cal"
			  :day calendar_day
			  :month calendar_month
			  :year calendar_year)))

(defwidget timer [screen total]
  (box :class "dockbox" :height 100 :width 400 :orientation "v" :spacing 10 :space-evenly false
    (label :text countdown :class "timertext ${substring(countdown, 3,5) < 10 ? "urgent" : substring(countdown, 3,5) < 30 ? "important" : "" }" :halign "center")
    (progress :class "timerprogress" :orientation "h" :value {(substring(countdown, 0,2) * 60 + substring(countdown, 3,5)) / total * 100})))

;; ** Windows *************************************************************************

;; system
(defwindow system [screen]
  :monitor screen
  :geometry (geometry :x "-1%"
    :y "10px"
    :width "30%"
    :height "40px"
    :anchor "top right")
  :stacking "fg"
  :reserve (struts :distance "80px" :side "top")
  :windowtype "dock"
  :wm-ignore true
  :exclusive true
  :focusable false
  (system :screen screen))

(defwindow calendar [screen]
  :monitor screen
  :geometry (geometry :x "-1%"
    :y "55px"
    :anchor "top right")
  :width "10%"
  :stacking "fg"
  :windowtype "dialog"
  :wm-ignore true
  (right-calendar :screen screen))

(defwindow timer [screen total]
  :monitor screen
  :geometry (geometry :x "0"
    :y "10px"
    :anchor "top center")
  :width "500px"
  :stacking "fg"
  :windowtype "dock"
  :wm-ignore true
  (timer :screen screen :total total))
